#!/bin/bash

if [ -z ${GITHUB_TOKEN+x} ]; then
  echo "You need to supply a GITHUB_TOKEN env variable before you can publish"
  echo
  exit 1
fi


# build the frontend before checking if its in a clean state
set -e
cd site
yarn
yarn run build
cd -
set +e

# check if git is clean
if ! $(git diff-index --quiet HEAD); then
  echo "Aborting release due to git not being in a clean state"
  echo
  exit 1
fi

set -e

tag=$(jq '.version' package.json -r)

echo "The current version is ${tag}, please enter a new version"
version=""

while ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; do
  read -p 'Version: ' version
done

if [ "$tag" = "$version" ]; then
  echo "This version is already published"
  echo
  exit 1
fi

./scripts/check
echo $version

# update version
echo "$( jq .version=\"${version}\" package.json )" > package-new.json
mv package-new.json package.json
git add package.json
git commit -m"Bump to version v$version"
git tag -a "v${version}" -m"Release version ${version}"
goreleaser release --clean
git push
git push origin "v${version}"

tag=$(jq '.version' package.json -r)

url="https://github.com/boardzilla/boardzilla-devtools/releases"
echo "Opening $url"
open $url

set +e
echo "Waiting for release to become public"
until ./scripts/check-github-release
do
  sleep 5
  echo -n "."
done
echo "Release is public, proceeding"

set -e
npm publish --access public
