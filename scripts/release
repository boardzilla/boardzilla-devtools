#!/bin/bash

set -e

if [ -z ${GITHUB_TOKEN+x} ]; then
  echo "You need to supply a GITHUB_TOKEN env variable before you can publish"
  echo
  exit 1
fi


# build the frontend before checking if its in a clean state
cd internal/site
yarn
yarn run build
cp node_modules/@fontsource-variable/dm-sans/index.css public/font.css
cp node_modules/@fontsource-variable/dm-sans/files/* public/
cd -

# # check if git is clean
if [[ $(git diff-index -p HEAD) ]]; then
  echo "Aborting release due to git not being in a clean state"
  echo
  exit 1
fi

tag=$(git describe --abbrev=0 --tags)

echo "The current version is ${tag}, please enter a new version (without the v)"
version=""

while ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; do
  read -p 'Version: ' version
done

if [ "$tag" = "$version" ]; then
  echo "This version is already published"
  echo
  exit 1
fi

./scripts/check
echo "Using version $version, releasing..."

# add the version
git tag -a "v${version}" -m"Release version ${version}"

# update version
goreleaser release --clean
git push origin "v${version}"

url="https://github.com/boardzilla/boardzilla-devtools/releases"
echo "Opening $url"
open $url

set +e
echo "Waiting for release to become public"
until ./scripts/check-github-release "$version"
do
  sleep 5
  echo -n "."
done
echo "Release is public, proceeding"
